upstream api {
  server impresso-middle-layer:3030  max_fails=1;
  keepalive 64;
}
upstream public_api {
  server impresso-middle-layer-public:3030  max_fails=1;
  keepalive 64;
}
upstream admin {
  server impresso-user-admin:8000  max_fails=1;
}
upstream recsys {
  server impresso-recsys:8000;
  keepalive 64;
}
upstream auth-service {
  server auth-service:8087;
  keepalive 64;
}

server {
  listen 80;
  # no need to define specific names - just accept any hostname
  # server_name impresso-project.ch localhost;
  default_type "text/html";

  # access_log /tmp/nginx.access.log combined;
  # error_log /tmp/nginx.error.log debug;
  error_log /var/log/nginx/error.log debug;

  location / {
    proxy_pass              https://impresso.github.io;
    proxy_intercept_errors  on;

    proxy_redirect          default;
    proxy_buffering         off;
    proxy_set_header        Host                 impresso.github.io;
    proxy_set_header        X-Real-IP            $remote_addr;
    proxy_set_header        X-Forwarded-For      $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Protocol $scheme;

    # allow GitHub to pass caching headers instead of using our own
    expires off;
  }

  # Widget for embedding
  location /app/widget {
    alias /opt/impresso-frontend/widget;
  }

  # Webapp
  location /app {
    alias /opt/impresso-frontend;
    try_files $uri $uri/ /index.html = 404;
  }

  # Datalab
  location /datalab {
    alias /opt/impresso-datalab;
    try_files $uri $uri/ /index.html = 404;
    # auth_basic "Restricted";
    # auth_basic_user_file /etc/nginx/extra_config_files/datalab.htpasswd;
  }

  # Web app static files
  location ~ /app/static/*\.(?:css|gif|htc|ico|js|jpe?g|png|swf)$ {
    expires max;
    log_not_found off;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
    ## Set the OS file cache.
    open_file_cache max=1000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
  }

  ## More static assets
  location ~ /assets/*\.(?:css|gif|htc|ico|js|jpe?g|png|swf)$ {
    expires max;
    log_not_found off;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
    ## Set the OS file cache.
    open_file_cache max=1000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
  }

  # internal API
  location /api {
    rewrite /api/(.*) /$1 break;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass http://api;
    proxy_redirect off;
    proxy_read_timeout 240s;
  }

  # Api powered image proxy
  location /proxy {
    rewrite /api/(.*) /$1 break;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass http://api;
    proxy_redirect off;
    proxy_read_timeout 240s;
  }

  # Public API
  location /public-api/v1 {
    rewrite /public-api/v1/(.*) /$1 break;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Prefix '/public-api/v1';
    proxy_set_header Host $host;
    proxy_pass http://public_api;
    proxy_redirect off;
    proxy_read_timeout 240s;
  }

  # Admin portal
  location /admin {
    proxy_pass http://admin;
    proxy_pass_request_headers on;
    proxy_no_cache $cookie_nocache  $arg_nocache$arg_comment;
    proxy_no_cache $http_pragma     $http_authorization;
    proxy_cache_bypass $cookie_nocache $arg_nocache $arg_comment;
    proxy_cache_bypass $http_pragma $http_authorization;
  }

  # Recommender system
  location /recsys {
    rewrite /recsys/(.*) /$1 break;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass http://recsys;
    proxy_pass_request_headers on;

    proxy_redirect off;
    proxy_read_timeout 240s;
  }

  # CSV downloads
  location /protected-media {
    internal;
    # Location-specific logging
    access_log /var/log/nginx/internal_redirect.access.log combined;
    error_log /var/log/nginx/internal_redirect.error.log warn;
    alias /opt/impresso-user-media;
  }

  # Media files - audio manifests
  location ~ ^/media/audio/.*/manifest\.json$ {
    rewrite ^/media/audio/(.*)$ /$1 break;
    proxy_pass https://dhlab-audio-data.epfl.ch;

    proxy_set_header Host umd-mith.github.io;
    proxy_set_header X-Real-IP            $remote_addr;
    proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_redirect          default;
    proxy_buffering         off;

    proxy_hide_header Set-Cookie;
  }

  # Media files - audio
  location ~ ^/media/audio/.*\.mp3$ {

    # First, check with the auth service if the user has access
    # User auth credentials are in the cookie
    # Content auth credentials are in the manifset
    auth_request /_auth/bitwise-and/cookie-bitmap/iiif-presentation-manifest;

    rewrite ^/media/audio/(.*)$ /$1 break;
    proxy_pass https://dhlab-audio-data.epfl.ch;

    proxy_set_header Host umd-mith.github.io;
    proxy_set_header X-Real-IP            $remote_addr;
    proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_redirect          default;
    proxy_buffering         off;

    proxy_hide_header Set-Cookie;
  }

  # Internal authentication endpoint to check access to media files
  location /_auth {
    internal;
    
    # Remove /_auth prefix before forwarding to upstream
    rewrite ^/_auth/(.*) /$1 break;
    
    # Pass the original request information to the authentication service
    proxy_pass http://auth-service;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";

    # Pass the original URI before any rewrite occurs
    proxy_set_header X-Original-URI $request_uri;

    # Pass possible prefixes to strip
    proxy_set_header X-Prefix-Strip "/media/audio";
    
    proxy_set_header X-Original-Method $request_method;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $host;
    # disabled proto to fall back to https
    # proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Cache auth responses to improve performance
    proxy_cache_valid 200 30m;
  }
}
